/*
 * Copyright (c) 2013 Jonathan Perkin <jonathan@perkin.org.uk>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

var addon = require(__dirname + '/../build/Release/openzwave.node').Emitter;
var events = require('events');

/*
 * Extend prototype.
 */
function inherits(target, source) {
	for (var k in source.prototype)
		target.prototype[k] = source.prototype[k];
}

/*
 * Default options
 */
var _options = {
	modpath: __dirname,
	consoleoutput: false,
	logging: false,
	saveconfiguration: false,
	drivermaxattempts: 3
}
var ZWave = function(path, options) {
	options = options || {};
	options.modpath = options.modpath || _options.modpath;
	options.consoleoutput = options.consoleoutput || _options.consoleoutput;
	options.logging = options.logging || _options.logging;
	options.saveconfiguration = options.saveconfiguration || _options.saveconfiguration;
	options.drivermaxattempts = options.drivermaxattempts || _options.drivermaxattempts;
	this.path = path;
	this.addon = new addon(options);
	this.addon.emit = this.emit.bind(this);

	// Command classes <taken on 1 nov 2013 from http://wiki.micasaverde.com/index.php/ZWave_Command_Classes>
	this.COMMAND_CLASS_ALARM = 0x71;
	this.COMMAND_CLASS_APPLICATION_STATUS = 0x22;
	this.COMMAND_CLASS_ASSOCIATION_COMMAND_CONFIGURATION = 0x9B;
	this.COMMAND_CLASS_ASSOCIATION = 0x85;
	this.COMMAND_CLASS_ASSOCIATION_V2 = 0x85;
	this.COMMAND_CLASS_AV_CONTENT_DIRECTORY_MD = 0x95;
	this.COMMAND_CLASS_AV_CONTENT_SEARCH_MD = 0x97;
	this.COMMAND_CLASS_AV_RENDERER_STATUS = 0x96;
	this.COMMAND_CLASS_AV_TAGGING_MD = 0x99;
	this.COMMAND_CLASS_BASIC_WINDOW_COVERING = 0x50;
	this.COMMAND_CLASS_BASIC = 0x20;
	this.COMMAND_CLASS_BATTERY = 0x80;
	this.COMMAND_CLASS_CHIMNEY_FAN = 0x2A;
	this.COMMAND_CLASS_CLIMATE_CONTROL_SCHEDULE = 0x46;
	this.COMMAND_CLASS_CLOCK = 0x81;
	this.COMMAND_CLASS_COMPOSITE = 0x8D;
	this.COMMAND_CLASS_CONFIGURATION = 0x70;
	this.COMMAND_CLASS_CONFIGURATION_V2 = 0x70;
	this.COMMAND_CLASS_CONTROLLER_REPLICATION = 0x21;
	this.COMMAND_CLASS_DOOR_LOCK = 0x62;
	this.COMMAND_CLASS_DOOR_LOCK_LOGGING = 0x4C;
	this.COMMAND_CLASS_ENERGY_PRODUCTION = 0x90;
	this.COMMAND_CLASS_FIRMWARE_UPDATE_MD = 0x7A;
	this.COMMAND_CLASS_GEOGRAPHIC_LOCATION = 0x8C;
	this.COMMAND_CLASS_GROUPING_NAME = 0x7B;
	this.COMMAND_CLASS_HAIL = 0x82;
	this.COMMAND_CLASS_INDICATOR = 0x87;
	this.COMMAND_CLASS_IP_CONFIGURATION = 0x9A;
	this.COMMAND_CLASS_LANGUAGE = 0x89;
	this.COMMAND_CLASS_LOCK = 0x76;
	this.COMMAND_CLASS_MANUFACTURER_PROPRIETARY = 0x91;
	this.COMMAND_CLASS_MANUFACTURER_SPECIFIC = 0x72;
	this.COMMAND_CLASS_MARK = 0xEF;
	this.COMMAND_CLASS_METER_PULSE = 0x35;
	this.COMMAND_CLASS_METER = 0x32;
	this.COMMAND_CLASS_MTP_WINDOW_COVERING = 0x51;
	this.COMMAND_CLASS_MULTI_CHANNEL_ASSOCIATION_V2 = 0x8E;
	this.COMMAND_CLASS_MULTI_CHANNEL_V2 = 0x60;
	this.COMMAND_CLASS_MULTI_CMD = 0x8F;
	this.COMMAND_CLASS_MULTI_INSTANCE_ASSOCIATION = 0x8E;
	this.COMMAND_CLASS_MULTI_INSTANCE = 0x60;
	this.COMMAND_CLASS_NO_OPERATION = 0x00;
	this.COMMAND_CLASS_NODE_NAMING = 0x77;
	this.COMMAND_CLASS_NON_INTEROPERABLE = 0xF0;
	this.COMMAND_CLASS_POWERLEVEL = 0x73;
	this.COMMAND_CLASS_PROPRIETARY = 0x88;
	this.COMMAND_CLASS_PROTECTION = 0x75;
	this.COMMAND_CLASS_PROTECTION_V2 = 0x75;
	this.COMMAND_CLASS_REMOTE_ASSOCIATION_ACTIVATE = 0x7C;
	this.COMMAND_CLASS_REMOTE_ASSOCIATION = 0x7D;
	this.COMMAND_CLASS_SCENE_ACTIVATION = 0x2B;
	this.COMMAND_CLASS_SCENE_ACTUATOR_CONF = 0x2C;
	this.COMMAND_CLASS_SCENE_CONTROLLER_CONF = 0x2D;
	this.COMMAND_CLASS_SCHEDULE_ENTRY_LOCK = 0x4E;
	this.COMMAND_CLASS_SCREEN_ATTRIBUTES = 0x93;
	this.COMMAND_CLASS_SCREEN_ATTRIBUTES_V2 = 0x93;
	this.COMMAND_CLASS_SCREEN_MD = 0x92;
	this.COMMAND_CLASS_SCREEN_MD_V2 = 0x92;
	this.COMMAND_CLASS_SECURITY = 0x98;
	this.COMMAND_CLASS_SENSOR_ALARM = 0x9C;
	this.COMMAND_CLASS_SENSOR_BINARY = 0x30;
	this.COMMAND_CLASS_SENSOR_CONFIGURATION = 0x9E;
	this.COMMAND_CLASS_SENSOR_MULTILEVEL = 0x31;
	this.COMMAND_CLASS_SENSOR_MULTILEVEL_V2 = 0x31;
	this.COMMAND_CLASS_SILENCE_ALARM = 0x9D;
	this.COMMAND_CLASS_SIMPLE_AV_CONTROL = 0x94;
	this.COMMAND_CLASS_SWITCH_ALL = 0x27;
	this.COMMAND_CLASS_SWITCH_BINARY = 0x25;
	this.COMMAND_CLASS_SWITCH_MULTILEVEL = 0x26;
	this.COMMAND_CLASS_SWITCH_MULTILEVEL_V2 = 0x26;
	this.COMMAND_CLASS_SWITCH_TOGGLE_BINARY = 0x28;
	this.COMMAND_CLASS_SWITCH_TOGGLE_MULTILEVEL = 0x29;
	this.COMMAND_CLASS_THERMOSTAT_FAN_MODE = 0x44;
	this.COMMAND_CLASS_THERMOSTAT_FAN_STATE = 0x45;
	this.COMMAND_CLASS_THERMOSTAT_HEATING = 0x38;
	this.COMMAND_CLASS_THERMOSTAT_MODE = 0x40;
	this.COMMAND_CLASS_THERMOSTAT_OPERATING_STATE = 0x42;
	this.COMMAND_CLASS_THERMOSTAT_SETBACK = 0x47;
	this.COMMAND_CLASS_THERMOSTAT_SETPOINT = 0x43;
	this.COMMAND_CLASS_TIME_PARAMETERS = 0x8B;
	this.COMMAND_CLASS_TIME = 0x8A;
	this.COMMAND_CLASS_USER_CODE = 0x63;
	this.COMMAND_CLASS_VERSION = 0x86;
	this.COMMAND_CLASS_WAKE_UP = 0x84;
	this.COMMAND_CLASS_WAKE_UP_V2 = 0x84;
	this.COMMAND_CLASS_ZIP_ADV_CLIENT = 0x34;
	this.COMMAND_CLASS_ZIP_ADV_SERVER = 0x33;
	this.COMMAND_CLASS_ZIP_ADV_SERVICES = 0x2F;
	this.COMMAND_CLASS_ZIP_CLIENT = 0x2E;
	this.COMMAND_CLASS_ZIP_SERVER = 0x24;
	this.COMMAND_CLASS_ZIP_SERVICES = 0x23;
}

inherits(ZWave, events.EventEmitter);
inherits(ZWave, addon);

ZWave.prototype.connect = function() {
	this.addon.connect(this.path);
}

ZWave.prototype.disconnect = function() {
	this.addon.disconnect(this.path);
}

module.exports = ZWave;
